{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project/./src/utils/constants.js","webpack://mesto-project/./src/components/api.js","webpack://mesto-project/./src/components/modal.js","webpack://mesto-project/./src/components/card.js","webpack://mesto-project/./src/components/validation.js","webpack://mesto-project/./src/scripts/index.js"],"sourcesContent":["//переменные попапов\nconst popupEditProfile = document.querySelector(\".popup_type_edit\");\nconst popupAddCard = document.querySelector(\".popup_type_new-card\");\nconst popupZoomImage = document.querySelector(\".popup_type_image\");\nconst popupAvatarEdit = document.querySelector(\".popup-update-avatar\");\nconst popupConfirmDelete = document.querySelector(\".popup-confirm-delete\");\n\n//переменные кнопок\nconst popupProfileOpenButton = document.querySelector(\".profile__edit-button\");\nconst popupAddCardOpenButton = document.querySelector(\".profile__add-button\");\nconst popupProfileCloseButton = document.querySelector(\".button-close_type_edit\");\nconst popupAddCardCloseButton = document.querySelector(\".button-close_type_add\");\nconst popupZoomCloseButton = document.querySelector(\".button-close_type_zoom\");\nconst popupAvatarOpenButton = document.querySelector(\".profile__avatar-edit-button\");\nconst popupAvatarEditCloseButton = document.querySelector(\".button-close_type_avatar\");\n// const popupConfirmDeleteOpenButton = document.querySelector(\".profile__edit-button\");\nconst popupConfirmDeleteCloseButton = document.querySelector(\".button-close_type_confirm\");\nconst popupConfirmDeleteButton = document.querySelector(\".popup__button-confirm\");\n//переменные для формы редактирования профиля\nconst formEditElement = document.forms.editProfile;\nconst nameInput = formEditElement.elements.name;\nconst jobInput = formEditElement.elements.info;\n\n//переменные для редактирования профиля\nconst profileName = document.querySelector(\".profile__nickname\");\nconst userInfo = document.querySelector(\".profile__user-information\");\n\n//переменные для формы попапа добавления карточек\nconst formAddCardElement = document.forms.newCard;\nconst placeInput = formAddCardElement.elements.cardTitle;\nconst linkInput = formAddCardElement.elements.link;\n\n//переменные для попапа добавления карточек\nconst cardContainer = document.querySelector(\".places__list\");\n\n//переменные для редактирования аватара\nconst avatarImage = document.querySelector(\".profile__image\");\n\n//переменные для формы редактирования аватара\nconst formEditAvatarElement = document.forms.updateAvatar;\nconst avatarLinkInput = formEditAvatarElement.elements.url;\n\nconst configForm = {\n    formSelector: \".popup__form\",\n    inputSelector: \".popup__input\",\n    submitButtonSelector: \".popup__button\",\n    inputErrorClass: \"popup__input_invalid\",\n    buttonInactiveClass: \"popup__button_disabled\",\n    errorClass: \".error\",\n  };\n\n\nexport { popupEditProfile, popupAddCard, popupZoomImage, popupAvatarEdit, popupProfileOpenButton,\npopupAddCardOpenButton, popupProfileCloseButton, popupAddCardCloseButton, popupZoomCloseButton,\npopupAvatarOpenButton, popupAvatarEditCloseButton, formEditElement, nameInput, jobInput, profileName,\nuserInfo, formAddCardElement, placeInput, linkInput, cardContainer, avatarImage, formEditAvatarElement,\navatarLinkInput, configForm, popupConfirmDelete, popupConfirmDeleteCloseButton, popupConfirmDeleteButton };","const config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-2\",\n  headers: {\n    authorization: \"7b51863c-93c2-411f-a61e-7d6b9806910b\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n//Токен: 7b51863c-93c2-411f-a61e-7d6b9806910b\n//Идентификатор группы: wff-cohort-2\n\nconst checkError = (response) => {\n  if (response.ok) {\n    return response.json();\n  } else {\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${response.status} ${response.statusText}`);\n  }\n};\n\n//запрос информации пользователя\nexport const getUserInformation = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n    method: \"GET\",\n  }).then(checkError);\n};\n\n//запрос карточек\nexport const getCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n    method: \"GET\",\n  }).then(checkError);\n};\n\n//редактирование информации пользователя\nexport const editUserInformation = ({ name, job }) => {\n  //отредактировать информацию // в name и about попали мои отредактированные данные\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n    method: \"PATCH\",\n    body: JSON.stringify({\n      //берет мой обьект  превращает в строку\n      name: name, //сюда попадают мои отредактированные данные\n      about: job,\n    }),\n  }).then(checkError);\n};\n\nexport const addCard = ({ name, link }) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n    method: \"POST\",\n    body: JSON.stringify({\n      name: name,\n      link: link,\n    }),\n  }).then(checkError);\n};\n\nexport const deleteCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    headers: config.headers,\n    method: \"DELETE\",\n  }).then(checkError);\n};\n\nexport const putLike = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    headers: config.headers,\n    method: \"PUT\",\n  }).then(checkError);\n};\n\nexport const deleteLike = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    headers: config.headers,\n    method: \"DELETE\",\n  }).then(checkError);\n};\n\nexport const editAvatar = ({ avatar }) => {\n  //отредактировать информацию // в name и about попали мои отредактированные данные\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    headers: config.headers,\n    method: \"PATCH\",\n    body: JSON.stringify({\n      //берет мой обьект  превращает в строку\n      avatar: avatar,\n    }),\n  }).then(checkError);\n};\n\nexport const testAvatarUrl = ({ avatar }) => {\n  return fetch(avatar, {\n    method: \"HEAD\",\n  })\n    .then(checkError)\n    .then((res) => {\n      return res.headers.get(\"content-type\");\n    });\n};\n","//открыть модальное окно\nfunction openPopup(popup) {\n  popup.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closeByEsc);\n  popup.addEventListener(\"mousedown\", closeByOverlayClick);\n}\n\n//закрыть модальное окно\nfunction closePopup(popup) {\n  popup.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closeByEsc);\n  popup.removeEventListener(\"mousedown\", closeByOverlayClick);\n}\n\n//закрыть модальное окно нажатием на ESC\nfunction closeByEsc(evt) {\n  if (evt.key === \"Escape\") {\n    const popup = document.querySelector(\".popup_is-opened\");\n    closePopup(popup);\n  }\n}\n\n//закрыть модальное окно нажатием на фон\nfunction closeByOverlayClick(evt) {\n  if (evt.target === evt.currentTarget) {\n    closePopup(evt.currentTarget);\n  }\n}\n\nexport { openPopup, closePopup };","import { deleteCard, putLike, deleteLike } from \"./api.js\";\nimport { openPopup, closePopup } from \"./modal.js\";\nimport {\n  popupConfirmDelete,\n  popupConfirmDeleteButton,\n} from \"../utils/constants.js\";\nfunction createCard(item, handleDeleteCard, handleZoomImage, myId) {\n  const cardTemplate = document.querySelector(\"#card-template\").content;\n  const card = cardTemplate.querySelector(\".card\").cloneNode(true);\n  const cardImage = card.querySelector(\".card__image\");\n  const cardTitle = card.querySelector(\".card__title\");\n  const deleteCardButton = card.querySelector(\".card__delete-button\");\n  const likeCardButton = card.querySelector(\".card__like-button\");\n  const likeCounter = card.querySelector(\".card__like-counter\");\n  cardImage.src = item.link;\n  cardImage.alt = item.name;\n  cardTitle.textContent = item.name;\n  likeCounter.textContent = item.likes.length;\n  const cardId = item._id;\n  if (isLikedByMe(item, myId)) {\n    likeCardButton.classList.add(\"card__like-button_is-active\");\n  }\n  if (myId !== item.owner._id) {\n    deleteCardButton.remove();\n  } else {\n    deleteCardButton.addEventListener(\"click\", () => {\n      handleDeleteCard(deleteCardButton, \".card\", cardId);\n    });\n    deleteCardButton.removeEventListener(\"click\", () => {\n      handleDeleteCard(deleteCardButton, \".card\", cardId);\n    });\n  }\n\n  likeCardButton.addEventListener(\"click\", () => {\n    const likeMethod = likeCardButton.classList.contains(\n      \"card__like-button_is-active\"\n    )\n      ? deleteLike\n      : putLike;\n    likeMethod(cardId)\n      .then((cardData) => {\n        likeCardButton.classList.toggle(\"card__like-button_is-active\");\n        likeCounter.textContent = cardData.likes.length;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  });\n  cardImage.addEventListener(\"click\", handleZoomImage);\n\n  return card;\n}\n\nfunction handleDeleteCard(button, classname, id) {\n  openPopup(popupConfirmDelete);\n  popupConfirmDeleteButton.addEventListener(\"click\", () => {\n    const cardParent = button.closest(classname);\n    deleteCard(id)\n      .then((res) => {\n        cardParent.remove();\n        closePopup(popupConfirmDelete);\n      })\n      .catch((error) => {\n        console.log(error)\n      });\n    }, { once: true });\n\n}\n\n\nfunction isLikedByMe(cardData, ownerId) {\n  return cardData.likes.some((like) => {\n    return like._id == ownerId;\n  });\n}\n\nexport { createCard, handleDeleteCard };\n","//покажи ошибку\nfunction showError(inputElement, errorElement, config) {\n  inputElement.classList.add(config.inputErrorClass);\n  errorElement.textContent = inputElement.validationMessage;\n}\n\n//спрячь ошибку\nfunction hideError(inputElement, errorElement, config) {\n  inputElement.classList.remove(config.inputErrorClass);\n  errorElement.textContent = \"\";\n}\n\n//проверим валидность\nfunction checkInputValidity(inputElement, formElement, config) {\n  const isInputMatchPattern = inputElement.validity.patternMismatch;\n  const errorElement = formElement.querySelector(`#${inputElement.name}-error`);\n  if (isInputMatchPattern) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n  const isInputValid = inputElement.validity.valid;\n  if (isInputValid) {\n    hideError(inputElement, errorElement, config);\n  } else {\n    showError(inputElement, errorElement, config);\n  }\n}\n\nfunction makeButtonUnblocked(buttonElement, config) {\n  buttonElement.disabled = false;\n  buttonElement.classList.remove(config.buttonInactiveClass);\n}\n\nfunction makeButtonBlocked(buttonElement, config) {\n  buttonElement.disabled = true;\n  buttonElement.classList.add(config.buttonInactiveClass);\n}\n\n//блокировка кнопки\nfunction toggleButton(buttonElement, isActive, config) {\n  if (isActive) {\n    makeButtonUnblocked(buttonElement, config);\n  } else {\n    makeButtonBlocked(buttonElement, config);\n  }\n}\n\n//Вешаем обработчик события submit\nfunction setEventListeners(formElement, config) {\n  const inputList = formElement.querySelectorAll(config.inputSelector);\n  const submitButtonElement = formElement.querySelector(\n    config.submitButtonSelector\n  );\n  toggleButton(submitButtonElement, formElement.checkValidity(), config);\n\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener(\"input\", function () {\n      toggleButton(submitButtonElement, formElement.checkValidity(), config);\n      checkInputValidity(inputElement, formElement, config);\n    });\n  });\n  formElement.addEventListener(\"submit\", function (evt) {\n    evt.preventDefault();\n  });\n}\n\n//Находим все формы и перебираем их\nexport function enableValidation(config) {\n  const formList = document.querySelectorAll(config.formSelector);\n  formList.forEach(function (formElement) {\n    setEventListeners(formElement, config);\n  });\n}\n\n//очищаем поля ошибок и  блокируем кнопку\nexport function clearValidation(formElement, config) {\n  const inputList = formElement.querySelectorAll(config.inputSelector);\n  const submitButtonElement = formElement.querySelector(\n    config.submitButtonSelector\n  );\n  inputList.forEach((inputElement) => {\n    const errorElement = formElement.querySelector(\n      `#${inputElement.name}-error`\n    );\n    hideError(inputElement, errorElement, config);\n  });\n  toggleButton(submitButtonElement, false, config);\n}\n\n","import \"../pages/index.css\";\nimport { popupEditProfile, popupAddCard, popupZoomImage, popupAvatarEdit, popupProfileOpenButton,\n  popupAddCardOpenButton, popupProfileCloseButton, popupAddCardCloseButton, popupZoomCloseButton,\n  popupAvatarOpenButton, popupAvatarEditCloseButton, formEditElement, nameInput, jobInput, profileName,\n  userInfo, formAddCardElement, placeInput, linkInput, cardContainer, avatarImage, formEditAvatarElement,\n  avatarLinkInput, configForm, popupConfirmDeleteCloseButton, popupConfirmDelete } from \"../utils/constants.js\";\nimport {\n  createCard,\n  handleDeleteCard,\n} from \"../components/card.js\";\nimport { openPopup, closePopup } from \"../components/modal.js\";\nimport {\n  enableValidation,\n  clearValidation\n} from \"../components/validation\";\nimport {\n  getUserInformation,\n  getCards,\n  editUserInformation,\n  addCard,\n  editAvatar,\n  testAvatarUrl,\n} from \"../components/api\";\n\n\n\n//функция для попапа редактирования профиля\nfunction handleEditFormSubmit(evt) {\n  evt.preventDefault();\n  const submitButtonElement = document.querySelector(\".popup__button-edit\");\n  const name = nameInput.value;\n  const job = jobInput.value;\n  profileName.textContent = name;\n  userInfo.textContent = job;\n  renderLoading(true, submitButtonElement);\n  editUserInformation({ name, job })\n    .then((data) => {})\n    .catch((error) => {\n      console.log(error);\n    })\n    .finally(() => {\n      renderLoading(false, submitButtonElement);\n    });\n  closePopup(popupEditProfile);\n}\n\n\n//функция для попапа обновления аватара\nfunction handleEditAvatarSubmit(evt) {\n  evt.preventDefault();\n  const submitButtonElement = document.querySelector(\".popup__button-avatar\");\n  const avatar = avatarLinkInput.value;\n  renderLoading(true, submitButtonElement);\n  testAvatarUrl({ avatar })\n    .then((data) => {\n      if(data == 'image/jpeg'|| data == 'image/png' || data == 'image/gif') {\n        console.log(data + \" - правильный формат\");\n      } else {\n       return Promise.reject(\"Ошибка\");\n      };\n    })\n    .then(() => { avatarImage.src = avatar; \n      return editAvatar({ avatar }); })\n    .then((data) => {})\n    .catch((error) => {\n      if (error == \"Ошибка\") {\n        console.log(\"Некорректный формат изображения, используйте jpg, png или gif\"); // выведем ошибку в консоль\n      } else {\n        console.log(error);\n      }\n    })\n    .finally(() => {\n      renderLoading(false, submitButtonElement);\n    });\n  \n\n  closePopup(popupAvatarEdit);\n}\n\n//функция рендера карточки на страницу\nfunction renderCard(item) {\n  const newCard = createCard(\n    item,\n    handleDeleteCard,\n    handleZoomImage,\n    myId\n  );\n  cardContainer.prepend(newCard);\n}\n\n//добавляем свою карточку\nfunction addMyCard(evt) {\n  evt.preventDefault();\n  const submitButtonElement = document.querySelector(\".popup__button-add\");\n  const name = placeInput.value;\n  const link = linkInput.value;\n  renderLoading(true, submitButtonElement);\n  addCard({ name, link })\n    .then((data) => {\n      renderCard(data);\n      closePopup(popupAddCard);\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n    .finally(() => {\n      renderLoading(false, submitButtonElement);\n    });\n  evt.target.reset();\n}\n\n//функция увеличения изображения по клику\nfunction handleZoomImage(evt) {\n  openPopup(popupZoomImage);\n  const imageZoomed = popupZoomImage.querySelector(\".popup__image\");\n  const imageCaption = popupZoomImage.querySelector(\".popup__caption\");\n  const img = evt.target;\n  imageZoomed.src = img.src;\n  imageZoomed.alt = img.alt;\n  imageCaption.textContent = imageZoomed.alt;\n}\n\n//функция заполнения данными профиля из инпутов\nfunction setUserInfo() {\n  const name = profileName.textContent;\n  const job = userInfo.textContent;\n  nameInput.value = name;\n  jobInput.value = job;\n}\n\n//включаем валидацию\nenableValidation(configForm);\n\n\n// API\nconst pageData = [getUserInformation(), getCards()];\n\nexport let myId;\n //мой айди 0fd2e9b846773c97126418ae\n\nPromise.all(pageData)\n  .then(([userInformation, cardMassive]) => {\n    myId = userInformation._id;\n    cardMassive.reverse().forEach((item) => {\n      renderCard(item);\n    });\n    profileName.textContent = userInformation.name;\n    userInfo.textContent = userInformation.about;\n    avatarImage.src = userInformation.avatar;\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n\n  //функция смены надписи кнопки при сохранении\nfunction renderLoading(isLoading, button) { \n  button.textContent = isLoading ? \"Сохранение...\" : \"Сохранить\";\n}\n\n//слушатели-обработчики\n//слушатели для попапа редактирования\npopupProfileOpenButton.addEventListener(\"click\", () => {\n  openPopup(popupEditProfile);\n  clearValidation(formEditElement, configForm);\n  setUserInfo();\n});\n\npopupProfileCloseButton.addEventListener(\"click\", () => {\n  closePopup(popupEditProfile);\n});\n\nformEditElement.addEventListener(\"submit\", handleEditFormSubmit);\n\n//слушатели для попапа карточки\npopupAddCardOpenButton.addEventListener(\"click\", () => {\n  openPopup(popupAddCard);\n  clearValidation(formAddCardElement, configForm);\n});\n\npopupAddCardCloseButton.addEventListener(\"click\", () => {\n  closePopup(popupAddCard);\n});\n\nformAddCardElement.addEventListener(\"submit\", addMyCard);\n\n//слушатели для попапа изображения\npopupZoomCloseButton.addEventListener(\"click\", () => {\n  closePopup(popupZoomImage);\n});\n\n//слушатели для попапа аватара\npopupAvatarOpenButton.addEventListener(\"click\", () => {\n  openPopup(popupAvatarEdit);\n  clearValidation(formEditAvatarElement, configForm);\n\n});\n\npopupAvatarEditCloseButton.addEventListener(\"click\", () => {\n  closePopup(popupAvatarEdit);\n});\n\nformEditAvatarElement.addEventListener(\"submit\", handleEditAvatarSubmit);\n\npopupConfirmDeleteCloseButton.addEventListener(\"click\", () => {\n  closePopup(popupConfirmDelete);\n});"],"names":["popupEditProfile","document","querySelector","popupAddCard","popupZoomImage","popupAvatarEdit","popupConfirmDelete","popupProfileOpenButton","popupAddCardOpenButton","popupProfileCloseButton","popupAddCardCloseButton","popupZoomCloseButton","popupAvatarOpenButton","popupAvatarEditCloseButton","popupConfirmDeleteCloseButton","popupConfirmDeleteButton","formEditElement","forms","editProfile","nameInput","elements","name","jobInput","info","profileName","userInfo","formAddCardElement","newCard","placeInput","cardTitle","linkInput","link","cardContainer","avatarImage","formEditAvatarElement","updateAvatar","avatarLinkInput","url","configForm","formSelector","inputSelector","submitButtonSelector","inputErrorClass","buttonInactiveClass","errorClass","config","baseUrl","headers","authorization","checkError","response","ok","json","Promise","reject","concat","status","statusText","deleteCard","cardId","fetch","method","then","putLike","deleteLike","openPopup","popup","classList","add","addEventListener","closeByEsc","closeByOverlayClick","closePopup","remove","removeEventListener","evt","key","target","currentTarget","handleDeleteCard","button","classname","id","cardParent","closest","res","catch","error","console","log","once","hideError","inputElement","errorElement","textContent","toggleButton","buttonElement","isActive","disabled","makeButtonUnblocked","makeButtonBlocked","clearValidation","formElement","inputList","querySelectorAll","submitButtonElement","forEach","renderCard","item","handleZoomImage","myId","card","content","cloneNode","cardImage","deleteCardButton","likeCardButton","likeCounter","src","alt","likes","length","ownerId","_id","some","like","owner","contains","cardData","toggle","createCard","prepend","imageZoomed","imageCaption","img","checkValidity","isInputMatchPattern","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","validationMessage","showError","checkInputValidity","preventDefault","setEventListeners","enableValidation","pageData","renderLoading","isLoading","all","_ref","_ref2","userInformation","cardMassive","reverse","about","avatar","job","value","body","JSON","stringify","editUserInformation","data","finally","addCard","reset","_ref4","get","_ref3","editAvatar"],"sourceRoot":""}